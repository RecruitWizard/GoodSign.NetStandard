name: Build & Test

on:
  push:
    branches:    
      - '**' # matches every branch  
  workflow_dispatch:      

env:
  OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
  OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
  OCTOPUS_SPACE: 'Recruit Wizard'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.WizardsoftGitHubToken }}
        fetch-depth: 0
        submodules: 'recursive'
        
    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1
      with:
        versionSpec: '5.x'
        
    - name: Display GitVersion config
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v1
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml  

    - name: Display GitVersion outputs
      run: |
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
        echo "NuGetVersionV2: ${{ env.GitVersion_NuGetVersionV2 }}"
        
    - name: Set VERSION variable from tag
      run: echo "VERSION=${{ env.GitVersion_NuGetVersionV2 }}" >> $GITHUB_ENV

    - name: Find and Replace Version in NuSpec
      uses: richardrigutins/replace-in-files@v2
      with:
        files: 'src/GoodSign.NetStandard/GoodSign.NetStandard.nuspec'
        search-text: '$version'
        replacement-text: ${{ env.GitVersion_NuGetVersionV2 }}                  
        
    - name: Restore dependencies
      run: dotnet restore src/GoodSign.NetStandard.sln
      
    - name: Build
      run: dotnet build src/GoodSign.NetStandard.sln --configuration Release /p:Version=${VERSION} --no-restore

    - name: Pack
      run: dotnet pack src/GoodSign.NetStandard/GoodSign.NetStandard.csproj -p:PackageVersion=${VERSION} -p:IncludeReferencedProjects --configuration Release --output packaging 
               
    - name: Push a package to Octopus Deploy üêô
      uses: OctopusDeploy/push-package-action@v3
      with:
        packages: |
          packaging/*.nupkg

    - name: Push build information to Octopus Deploy üêô
      uses: xo-energy/action-octopus-build-information@v1.4.9
      with:
        octopus_api_key: ${{ secrets.OCTOPUS_API_KEY }}
        octopus_server: ${{ secrets.OCTOPUS_SERVER_URL }}
        octopus_project: goodsign-netstandard
        output_path: octopus
        push_package_ids: GoodSign.NetStandard
        push_overwrite_mode: OverwriteExisting
        push_version: ${{ steps.gitversion.outputs.fullSemVer }}

    - name: Create a release in Octopus Deploy
      uses: OctopusDeploy/create-release-action@v3
      with:
        project: 'GoodSign.NetStandard'
        package_version: ${{ steps.gitversion.outputs.fullSemVer }}
        git_ref: ${{ github.ref }}

    - name: Create a Release in GitHub
      if: github.ref == 'refs/heads/main'
      run: gh release create ${{ steps.gitversion.outputs.fullSemVer }} --target ${{ github.sha }} 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        